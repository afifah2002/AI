def bfs(graph, source):
    visited = set() 
    bfs_traversal = list()  
    queue = list()  
    
    
    queue.append(source)
    visited.add(source)
    
    while queue:
        
        current_node = queue.pop(0)
        bfs_traversal.append(current_node)
        
        for neighbour_node in graph[current_node]:
          
            if neighbour_node not in visited:
                visited.add(neighbour_node)
                queue.append(neighbour_node)

    return bfs_traversal
  
  
def main():
    graph = {
        1 :[2,3,4],
        2 :[5,6],
        3 :[],
        4 :[7,8],
        5 :[9,10],
        6 :[],
        7 :[11,12],
        8 :[],
        9 :[],
        10 :[],
        11 :[],
        12 :[]
    }
  
    
    bfs_traversal = bfs(graph, 1)
    print(f"BFS TRAVERSAL IS: {bfs_traversal}")

    
if __name__=='__main__':
    main()
    
